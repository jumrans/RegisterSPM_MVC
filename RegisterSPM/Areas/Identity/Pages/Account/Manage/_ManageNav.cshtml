@using System.Security.Claims
@inject SignInManager<IdentityUser> _signInManager
@{
  var hasExternalLogins = (await _signInManager.GetExternalAuthenticationSchemesAsync()).Any();
  var userId = Context.Request.RouteValues["userId"];
}

<ul class="nav nav-pills flex-column">
  <li class="nav-item">
    <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index" asp-route-userId="@userId">Profile</a>
  </li>
  @* <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email" asp-route-userId="@userId">Email</a></li> *@
  <li class="nav-item">
    <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword" asp-route-userId="@userId">Password</a>
  </li>
  @if (hasExternalLogins)
  {
    <li id="external-logins" class="nav-item">
      <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins" asp-route-userId="@userId">External logins</a>
    </li>
  }
  @* <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication" asp-route-userId="@userId">Two-factor authentication</a></li> *@
  <li class="nav-item">
    <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData" asp-route-userId="@userId">Data Personal</a>
  </li>
</ul>
